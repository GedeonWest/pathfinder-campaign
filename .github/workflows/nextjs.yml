# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID }}" >> .env.local
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        env:
          NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY }}
          NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID }}
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Add 404 fallback for GitHub Pages deep links
        run: |
          if [ -f "out/index.html" ]; then
            cp out/index.html out/404.html
          fi
      - name: Add no-trailing-slash HTML fallbacks for character detail
        run: |
          CHAR_DIR="out/pathfinder-campaign/characters"
          if [ -d "$CHAR_DIR" ]; then
            find "$CHAR_DIR" -mindepth 1 -maxdepth 1 -type d | while read -r d; do
              if [ -f "$d/index.html" ]; then
                base="$(basename "$d")"
                cp "$d/index.html" "$CHAR_DIR/$base.html"
              fi
            done
          fi
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Generate placeholders for dynamic character routes from Google Sheets (shell)
        env:
          NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY }}
          NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID }}
        run: |
          set -e
          if [ -z "$NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY" ] || [ -z "$NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID" ]; then
            echo "Sheets env missing, skipping placeholders"
            exit 0
          fi
          ENC_RANGE="Characters%21A1%3AZ"
          URL="https://sheets.googleapis.com/v4/spreadsheets/${NEXT_PUBLIC_GOOGLE_SHEETS_SPREADSHEET_ID}/values/${ENC_RANGE}?key=${NEXT_PUBLIC_GOOGLE_SHEETS_API_KEY}"
          RESP="$(curl -sS "$URL")"
          IDS="$(echo "$RESP" | jq -r '(.values[0] // []) as $h | ($h | index("id")) as $i | if $i==null then [] else (.values[1:] | map(select(length > $i) | .[$i]) ) end | .[]' || true)"
          CHAR_DIR="out/pathfinder-campaign/characters"
          SRC_HTML="out/index.html"
          if [ ! -f "$SRC_HTML" ]; then
            if [ -f "out/pathfinder-campaign/index.html" ]; then SRC_HTML="out/pathfinder-campaign/index.html"; else echo "No index html found, skipping"; exit 0; fi
          fi
          mkdir -p "$CHAR_DIR"
          count=0
          while IFS= read -r id; do
            [ -z "$id" ] && continue
            mkdir -p "$CHAR_DIR/$id"
            cp "$SRC_HTML" "$CHAR_DIR/$id/index.html"
            cp "$SRC_HTML" "$CHAR_DIR/$id.html"
            count=$((count+1))
          done <<< "$IDS"
          echo "Generated $count placeholders"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
