// Миксины для флексбокса
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

// Миксины для позиционирования
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin fixed-center {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-fill {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Миксины для типографики
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin font-smooth {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Миксины для анимаций
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property map-get($transitions, normal) map-get($easing, in-out), comma);
  }
  transition: $transitions;
}

@mixin hover-lift($distance: 4px) {
  transition: transform map-get($transitions, normal) map-get($easing, out);
  
  &:hover {
    transform: translateY(-$distance);
  }
}

@mixin hover-scale($scale: 1.05) {
  transition: transform map-get($transitions, normal) map-get($easing, out);
  
  &:hover {
    transform: scale($scale);
  }
}

@mixin hover-glow($color: color(primary, 500), $intensity: 0.3) {
  transition: box-shadow map-get($transitions, normal) map-get($easing, out);
  
  &:hover {
    box-shadow: 0 0 20px rgba($color, $intensity);
  }
}

// Миксины для кнопок
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: map-get($border-radius, md);
  font-family: inherit;
  font-size: map-get($font-sizes, base);
  font-weight: map-get($font-weights, medium);
  line-height: 1;
  text-decoration: none;
  cursor: pointer;
  transition: all map-get($transitions, fast) map-get($easing, in-out);
  user-select: none;
  
  &:focus {
    outline: 2px solid color(primary, 500);
    outline-offset: 2px;
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
}

@mixin button-variant($bg-color, $text-color, $hover-bg: null) {
  background-color: $bg-color;
  color: $text-color;
  
  @if $hover-bg {
    &:hover:not(:disabled) {
      background-color: $hover-bg;
    }
  } @else {
    &:hover:not(:disabled) {
      background-color: darken($bg-color, 10%);
    }
  }
}

@mixin button-size($padding-y, $padding-x, $font-size: map-get($font-sizes, base)) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
}

// Миксины для карточек
@mixin card-base {
  background-color: white;
  border-radius: map-get($border-radius, lg);
  box-shadow: map-get($shadows, sm);
  transition: box-shadow map-get($transitions, normal) map-get($easing, in-out);
  
  &:hover {
    box-shadow: map-get($shadows, md);
  }
}

@mixin card-elevated {
  @include card-base;
  box-shadow: map-get($shadows, lg);
  
  &:hover {
    box-shadow: map-get($shadows, xl);
  }
}

// Миксины для форм
@mixin input-base {
  width: 100%;
  padding: spacing(sm) spacing(md);
  border: 1px solid color(neutral, 300);
  border-radius: map-get($border-radius, md);
  background-color: white;
  font-family: inherit;
  font-size: map-get($font-sizes, base);
  line-height: 1.5;
  transition: border-color map-get($transitions, fast) map-get($easing, in-out);
  
  &:focus {
    outline: none;
    border-color: color(primary, 500);
    box-shadow: 0 0 0 3px color(primary, 100);
  }
  
  &:disabled {
    background-color: color(neutral, 100);
    cursor: not-allowed;
  }
  
  &::placeholder {
    color: color(neutral, 500);
  }
}

// Миксины для сеток
@mixin grid-auto-fit($min-width: 250px, $gap: spacing(md)) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: spacing(md)) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-columns($columns: 3, $gap: spacing(md)) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Миксины для градиентов
@mixin gradient-linear($direction: to right, $start-color, $end-color) {
  background: linear-gradient($direction, $start-color, $end-color);
}

@mixin gradient-radial($start-color, $end-color) {
  background: radial-gradient(circle, $start-color, $end-color);
}

@mixin gradient-text($start-color, $end-color) {
  background: linear-gradient(to right, $start-color, $end-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Миксины для медиа-запросов с ориентацией
@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

// Миксины для печати
@mixin print {
  @media print {
    @content;
  }
}

// Миксины для ретина дисплеев
@mixin retina {
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    @content;
  }
}

// Миксины для темной темы
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// Миксины для анимаций появления
@mixin fade-in-up($delay: 0s) {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp map-get($transitions, normal) map-get($easing, out) forwards;
  animation-delay: $delay;
}

@mixin fade-in-down($delay: 0s) {
  opacity: 0;
  transform: translateY(-20px);
  animation: fadeInDown map-get($transitions, normal) map-get($easing, out) forwards;
  animation-delay: $delay;
}

@mixin fade-in-left($delay: 0s) {
  opacity: 0;
  transform: translateX(-20px);
  animation: fadeInLeft map-get($transitions, normal) map-get($easing, out) forwards;
  animation-delay: $delay;
}

@mixin fade-in-right($delay: 0s) {
  opacity: 0;
  transform: translateX(20px);
  animation: fadeInRight map-get($transitions, normal) map-get($easing, out) forwards;
  animation-delay: $delay;
}

// Ключевые кадры для анимаций
@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  to {
    opacity: 1;
    transform: translateX(0);
  }
} 