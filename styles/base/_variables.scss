// Цветовая палитра
$colors: (
  // Основные цвета
  primary: (
    50: oklch(0.98 0.05 85),
    100: oklch(0.95 0.08 85),
    200: oklch(0.90 0.12 85),
    300: oklch(0.85 0.15 85),
    400: oklch(0.80 0.17 85),
    500: oklch(0.75 0.18 85),
    600: oklch(0.70 0.17 85),
    700: oklch(0.65 0.15 85),
    800: oklch(0.60 0.12 85),
    900: oklch(0.55 0.08 85),
    950: oklch(0.50 0.05 85)
  ),

  secondary: (
    50: oklch(0.98 0.05 45),
    100: oklch(0.95 0.08 45),
    200: oklch(0.90 0.12 45),
    300: oklch(0.85 0.15 45),
    400: oklch(0.80 0.17 45),
    500: oklch(0.75 0.18 45),
    600: oklch(0.70 0.17 45),
    700: oklch(0.65 0.15 45),
    800: oklch(0.60 0.12 45),
    900: oklch(0.55 0.08 45),
    950: oklch(0.50 0.05 45)
  ),

  neutral: (
    50: oklch(0.98 0 0),
    100: oklch(0.95 0 0),
    200: oklch(0.90 0 0),
    300: oklch(0.85 0 0),
    400: oklch(0.80 0 0),
    500: oklch(0.75 0 0),
    600: oklch(0.70 0 0),
    700: oklch(0.65 0 0),
    800: oklch(0.60 0 0),
    900: oklch(0.55 0 0),
    950: oklch(0.50 0 0)
  ),

  accent: (
    50: oklch(0.98 0.05 60),
    100: oklch(0.95 0.08 60),
    200: oklch(0.90 0.12 60),
    300: oklch(0.85 0.15 60),
    400: oklch(0.80 0.17 60),
    500: oklch(0.75 0.18 60),
    600: oklch(0.70 0.17 60),
    700: oklch(0.65 0.15 60),
    800: oklch(0.60 0.12 60),
    900: oklch(0.55 0.08 60),
    950: oklch(0.50 0.05 60)
  ),

  success: oklch(0.65 0.15 120),
  warning: oklch(0.75 0.18 60),
  error: oklch(0.65 0.25 25),
  info: oklch(0.65 0.15 200)
);

// Размеры
$spacing: (
  xs: 0.25rem,    // 4px
  sm: 0.5rem,     // 8px
  md: 1rem,       // 16px
  lg: 1.5rem,     // 24px
  xl: 2rem,       // 32px
  2xl: 3rem,      // 48px
  3xl: 4rem,      // 64px
  4xl: 6rem,      // 96px
  5xl: 8rem       // 128px
);

$border-radius: (
  none: 0,
  sm: 0.125rem,   // 2px
  md: 0.25rem,    // 4px
  lg: 0.5rem,     // 8px
  xl: 0.75rem,    // 12px
  2xl: 1rem,      // 16px
  3xl: 1.5rem,    // 24px
  full: 9999px
);

$shadows: (
  sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',
  md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',
  lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',
  xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',
  2xl: '0 25px 50px -12px rgb(0 0 0 / 0.25)',
  inner: 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)',
  none: 'none'
);

// Типографика
$font-families: (
  sans: ('Inter', 'system-ui', 'sans-serif'),
  serif: ('Georgia', 'Times New Roman', 'serif'),
  mono: ('JetBrains Mono', 'Fira Code', 'monospace')
);

$font-sizes: (
  xs: 0.75rem,    // 12px
  sm: 0.875rem,   // 14px
  base: 1rem,     // 16px
  lg: 1.125rem,   // 18px
  xl: 1.25rem,    // 20px
  2xl: 1.5rem,    // 24px
  3xl: 1.875rem,  // 30px
  4xl: 2.25rem,   // 36px
  5xl: 3rem,      // 48px
  6xl: 3.75rem,   // 60px
  7xl: 4.5rem,    // 72px
  8xl: 6rem,      // 96px
  9xl: 8rem       // 128px
);

$font-weights: (
  thin: 100,
  extralight: 200,
  light: 300,
  normal: 400,
  medium: 500,
  semibold: 600,
  bold: 700,
  extrabold: 800,
  black: 900
);

$line-heights: (
  none: 1,
  tight: 1.25,
  snug: 1.375,
  normal: 1.5,
  relaxed: 1.625,
  loose: 2
);

// Breakpoints для mobile-first подхода
$breakpoints: (
  xs: 0,
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  2xl: 1536px
);

// Z-index слои
$z-index: (
  hide: -1,
  auto: auto,
  base: 0,
  docked: 10,
  dropdown: 1000,
  sticky: 1100,
  banner: 1200,
  overlay: 1300,
  modal: 1400,
  popover: 1500,
  skipLink: 1600,
  toast: 1700,
  tooltip: 1800
);

// Анимации
$transitions: (
  fast: 150ms,
  normal: 250ms,
  slow: 350ms,
  slower: 500ms
);

$easing: (
  linear: 'linear',
  in: 'cubic-bezier(0.4, 0, 1, 1)',
  out: 'cubic-bezier(0, 0, 0.2, 1)',
  in-out: 'cubic-bezier(0.4, 0, 0.2, 1)'
);

// Функции для работы с переменными
@function color($color, $shade: 500) {
  @if map-has-key($colors, $color) {
    @if type-of(map-get($colors, $color)) == 'map' {
      @return map-get(map-get($colors, $color), $shade);
    } @else {
      @return map-get($colors, $color);
    }
  }
  @warn "Color '#{$color}' not found in $colors map.";
  @return null;
}

@function spacing($size) {
  @if map-has-key($spacing, $size) {
    @return map-get($spacing, $size);
  }
  @warn "Spacing '#{$size}' not found in $spacing map.";
  @return null;
}

@function breakpoint($size) {
  @if map-has-key($breakpoints, $size) {
    @return map-get($breakpoints, $size);
  }
  @warn "Breakpoint '#{$size}' not found in $breakpoints map.";
  @return null;
}

// Миксины для медиа-запросов
@mixin respond-to($breakpoint) {
  $value: breakpoint($breakpoint);
  @if $value {
    @media (min-width: $value) {
      @content;
    }
  }
}

@mixin respond-below($breakpoint) {
  $value: breakpoint($breakpoint);
  @if $value {
    $max-width: $value - 1px;
    @media (max-width: $max-width) {
      @content;
    }
  }
}

@mixin respond-between($min, $max) {
  $min-value: breakpoint($min);
  $max-value: breakpoint($max);
  @if $min-value and $max-value {
    $max-width: $max-value - 1px;
    @media (min-width: $min-value) and (max-width: $max-width) {
      @content;
    }
  }
}
